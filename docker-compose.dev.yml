# I created this file purely for testing purposes, this isn't even close to the actual file I used for my project.

services:

  redis:
    image: redis:alpine
    restart: always
    volumes:
      - "/redis-data:/data"
  
  mysite-db:
    container_name: mysite-db
    image: postgres:14-alpine
    volumes:
      - /postgres-data:/var/lib/postgresql/data
      - /postgres-data-backups:/backups
    env_file:
      - .env
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

  reverse-proxy:
    image: traefik:v3.3
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.allowEmptyServices=true"
      - "--entrypoints.web.address=:http"
      - "--log.level=DEBUG"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  mysite:  
    container_name: mysite
    build:   
      context: .
      dockerfile: Dockerfile
    volumes:  
      - ./.:/code
      - ./build:/code/static
      - ./media:/code/media
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - mysite-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mysite.rule=Host(`localhost`)"
      - "traefik.http.routers.mysite.entrypoints=web"
      - "traefik.http.services.mysite.loadbalancer.server.port=8000"
  
  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ../media:/usr/share/nginx/html/media  
    ports:
      - "8080:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=PathPrefix(`/media`)"
      - "traefik.http.routers.nginx.entrypoints=web"

