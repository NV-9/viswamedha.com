# Generated by Django 5.1.2 on 2024-12-20 22:00

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='User UUID')),
                ('email_address', models.EmailField(max_length=255, unique=True, verbose_name='Email Address')),
                ('username', models.CharField(max_length=25, unique=True, verbose_name='Username')),
                ('first_name', models.CharField(max_length=255, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last Name')),
                ('date_of_birth', models.DateField(verbose_name='Date of Birth')),
                ('is_active', models.BooleanField(default=True, verbose_name='Account Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Account Admin')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Account Verified')),
                ('verification_token', models.CharField(blank=True, max_length=200, null=True, verbose_name='Verfication Token')),
                ('reset_password_token', models.CharField(blank=True, max_length=200, null=True, verbose_name='Reset Password Token')),
                ('reset_instance_token', models.CharField(blank=True, max_length=200, null=True, verbose_name='Reset Instance Token')),
                ('password_reset_at', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'constraints': [models.UniqueConstraint(fields=('username',), name='unique_username')],
            },
        ),
    ]
